apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apigateway.fullname" . }}
  labels:
{{ include "apigateway.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "apigateway.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "apigateway.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.servicePort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: CELERY_BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-broker-login
                  key: uri
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-broker-login
                  key: uri
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: apigateway-postgres
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: apigateway-postgres
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: apigateway-postgres
                  key: database
            - name: FLASK_APP
              value: "/app/main.py"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh","-c","FLASK_APP=/app/main.py flask db upgrade"]
      initContainers:
        - name: init-postgresql
          image: busybox
          command: ['sh', '-c', 'until nslookup apigateway-postgresql; do echo waiting for apigateway-postgresql; sleep 2; done;']
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
